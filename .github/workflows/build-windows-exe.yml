name: Build and Release Windows Executable

on:
  push:
    branches:
      - main  # 每次推送到 main 分支时触发

jobs:
  build:
    runs-on: windows-latest  # 使用 Windows 环境编译 .exe
    steps:
      # 检出代码
      - name: Checkout code
        uses: actions/checkout@v4

      # 设置 Python 环境
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'  # 指定 Python 版本

      # 安装依赖
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyinstaller
          pip install -r requirements.txt

      # 使用 PyInstaller 编译为 .exe
      - name: Build executable with PyInstaller
        run: |
          pyinstaller --onefile --name ExHentaiFavorites main.py
        # --onefile: 打包为单个 .exe 文件
        # --name: 指定输出文件名
        # main.py: 您的主脚本文件名

      # 获取当前版本号并递增
      - name: Generate version number
        id: version
        run: |
          $current_tag = git tag --sort=-v:refname | Select-Object -First 1
          if (-not $current_tag) {
            $new_tag = "v1.0.0"
          } else {
            $version_numbers = $current_tag -replace '^v', '' -split '\.'
            $patch = [int]$version_numbers[2] + 1
            $new_tag = "v$($version_numbers[0]).$($version_numbers[1]).$patch"
          }
          echo "NEW_TAG=$new_tag" >> $env:GITHUB_OUTPUT
        shell: pwsh  # 使用 PowerShell 脚本生成版本号

      # 创建 GitHub Release 并上传 .exe
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.version.outputs.NEW_TAG }}
          name: Release ${{ steps.version.outputs.NEW_TAG }}
          body: Automated release for ExHentaiFavorites
          draft: false
          prerelease: false
          files: dist/ExHentaiFavorites.exe  # 上传编译好的 .exe 文件
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # 使用默认的 GITHUB_TOKEN